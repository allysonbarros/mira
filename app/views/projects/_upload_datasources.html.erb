<div class="row pull-left">
  <div class="col-md-9 col-md-offset-2">

    <%= form_for(@project, url: {action: "upload_datasources"} , method: "post", :html => { multipart: true }) do |f| %>

      <div class="control-group col-md-9">
        <%= f.label :csv_files, "CSV files", :class => 'control-label' %>
        <div class="controls">
        <%= file_field_tag "datafiles[]", type: :file, multiple: true %>
        </div>
      </div>

      <div class="form-actions col-md-6">
        <div class="btn-toolbar">
          <div class="btn-group">
            <%= f.submit "Quick Upload", :class => 'btn btn-primary', id: 'submit_files', name: 'quick-csv-upload' %>
          </div>
          <div class="btn-group">
            <%= f.submit "Slow Upload", :class => 'btn btn-primary', id: 'submit_files', name: 'slow-csv-upload' %>
          </div>
          <strong><big>&nbsp*</big></strong>
        </div>
        <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                    projects_path, :class => 'btn btn-mini' %>
      </div>

    <% end %>

    <div class="col-md-9">
      <p class="small">
      <strong><big>&nbsp*&nbsp</big></strong>The "quick upload" bypasses
      <a href="http://guides.rubyonrails.org/active_record_basics.html">ActiveRecord</a> table models, using
      instead an ActiveRecord raw connection. This is much faster than the "slow upload" but is more prone to
      failure (i.e. when data does not exactly conform to what is specified in the datapackage.json file). If
      the quick upload fails, then delete and try the slow upload.
      </p>
    </div>

  </div>
</div>
