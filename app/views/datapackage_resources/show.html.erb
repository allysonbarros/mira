<% provide(:title, 'Datapackage Resource') %>

<% provide(:custom_style) do %>

<% end %>


<%= link_to "Back to project overview", project_path(@project)%>
<br /><br />



<h2>Data: <%= @dpr.table_ref %></h2>
<ul class="nav nav-tabs" id="ds-browse-tabs">
  <li class="active"><a data-toggle="tab" href="#mira-uploads">Uploads</a></li>
  <li><a data-toggle="tab" href="#mira-apikeys">API Keys</a></li>
  <li><a data-toggle="tab" href="#mira-browse">Browse Data</a></li>
  <li><a data-toggle="tab" href="#mira-table-metadata">Table Metadata</a></li>
  <li><a data-toggle="tab" href="#mira-column-metadata">Column Metadata</a></li>
</ul>

<div class="tab-content">
  <div id="mira-uploads" class="tab-pane fade in active">


    <h4>Uploads</h4>
    <%= paginate @dpr_ds %>
    <table class="table">
      <thead>
        <tr>
          <th>ID</th>
          <th>File Name</th>
          <th>Database Rows</th>
          <th>Uploaded Date</th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <% @dpr_ds.each do |ds| %>
          <tr>
            <td><%= ds.id %></td>
            <td><%= link_to ds.datafile_file_name, project_datasource_path(@project,ds) %></td>
            <td><%= get_mira_ar_table(@dpr.db_table_name.capitalize).where(mira_source_type: "csv", mira_source_id: ds.id).count %></td>
            <td><%= ds.created_at %></td>
            <td><%= link_to "delete", [@project,ds], method: :delete,
                            data: { confirm: "Are you sure? This will delete any associated observations from the database." }, :class => "btn btn-xs btn-danger" %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
    <%= paginate @dpr_ds %>


  </div>
  <div id="mira-apikeys" class="tab-pane fade">

    <table class="table">
      <thead>
        <tr>
          <th>ID</th>
          <th>API Key Description</th>
          <th>API Key</th>
          <th>Database Rows</th>
          <th></th>
        </tr>
      </thead>
      <tbody>

      <% @apikey_ids.each do |keyid| %>
        <% apikey = ApiKey.find(keyid) %>
        <tr>
          <td><%= keyid %></td>
          <td><%= apikey.description %></td>
          <td><%= apikey.token %></td>
          <td><%= get_mira_ar_table(@dpr.db_table_name.capitalize).where(mira_source_type: "key", mira_source_id: keyid).count %></td>
          <td>
            <%= link_to "delete rows", "/projects/#{@project.id}/datapackage/datapackage_resources/#{@dpr.id}/api_keys/" + keyid.to_s, method: :delete,
                          data: { confirm: "Are you sure? This will only delete the rows for this key, not the key itself." }, :class => "btn btn-xs btn-danger" %>
          </td>
        </tr>
      <% end %>
      </tbody>
    </table>
  </div>
  <div id="mira-browse" class="tab-pane fade">


    <div id="mira-jtable">
    </div>


  </div>
  <div id="mira-table-metadata" class="tab-pane fade">

    <table class="table">
      <thead>
        <tr><th>Item</th><th>Value</th></tr>
      </thead>
      <tbody>
        <tr><td>ID</td>                   <td><%= @dpr.id %></td></tr>
        <tr><td>Description</td>          <td><%= @dpr.description %></td></tr>
        <tr><td>Datapackage ID</td>       <td><%= @dpr.datapackage_id %></td></tr>
        <tr><td>Path</td>                 <td><%= @dpr.path %></td></tr>
        <tr><td>Format</td>               <td><%= @dpr.format %></td></tr>
        <tr><td>Delimitir</td>            <td><%= @dpr.delimiter %></td></tr>
        <tr><td>Mediatype</td>            <td><%= @dpr.mediatype %></td></tr>
        <tr><td>Created Datetime</td>     <td><%= @dpr.created_at %></td></tr>
        <tr><td>Quote Character</td>      <td><%= @dpr.quote_character %></td></tr>
        <tr><td>Table Reference</td>      <td><%= @dpr.table_ref %></td></tr>
        <tr><td>Database Table Name</td>  <td><%= @dpr.db_table_name %></td></tr>
      </tbody>
    </table>

  </div>
  <div id="mira-column-metadata" class="tab-pane fade">

    <table class="table">
      <thead>
        <tr>
          <th>Position<br />(left to right)</th>
          <th>Column Name</th>
          <th>Datapackage Type</th>
          <th>Database Type<br />(Ruby's ActiveRecord)</th>
        </tr>
      </thead>
      <tbody>
        <% @fields.each do |field| %>
          <tr>
            <td><%= field.order %></td>
            <td><%= field.name %></td>
            <td><%= field.ftype %></td>
            <td><%= DATAPACKAGE_TYPE_MAP[field.ftype] %>
          </tr>
        <% end %>
      </tbody>
    </table>



  </div>
</div>
</div>




    <% provide(:custom_endofpage) do %>

      <%#= javascript_include_tag "/vendor/jtable.2.4.0/jquery/jtable.min.js" %>
      <script>
      $(document).ready(function () {

        var tableUrl = '<%= @tableUrl %>';
        var authToken = document.querySelector('meta[name="csrf-token"]').content

        $('#mira-jtable').jtable({
            title: '<%= @dpr.table_ref %>',
            actions: {
                listAction:   function(postData,jsParams) { return miraListAction(postData, jsParams) },
                createAction: function(postData) { return miraCreateAction(postData); },
                updateAction: function(postData) { return miraUpdateAction(postData); },
                deleteAction: function (postData) { return miraDeleteAction(postData); }

            },
            sorting: true,
            multiSorting: true,
            paging: true,
            pageSize: 10,
            jqueryuiTheme: true,
            fields: {
                id: {
                    key: true,
                    list: true
                }
                <% @fields.each do |field| %>
                  ,<%= field.name %>: {
                    title: '<%= field.name %>'
                    <% if field.ftype == "date" %>
                      ,type: 'date'
                    <% end %>
                  }
                <% end %>
                ,
                mira_source_type: {
                  title: "_source_",
                  edit: false,
                  create: false,
                  listClass: "special-mira-col",
                  display: function (data) {
                    // return "boo";
                    return '<span title="' + data.record.mira_created_at + '">' + data.record.mira_source_type + ', ' + data.record.mira_source_id + '</span>';
                  }
                },
                mira_source_id: {
                  title: "mira_source_id",
                  edit: false,
                  create: false,
                  type: "hidden"
                  // listClass: "special-mira-col"
                },
                mira_created_at: {
                  title: "mira_created_at",
                  edit: false,
                  create: false,
                  type: "hidden"
                  // listClass: "special-mira-col"
                }
            }
        });

        $('#mira-jtable').jtable('load');



        function miraPostData(postData) {
          miraPD = {};
          postData.split("&").forEach(function(item) {
            miraPD[item.split("=")[0]] = item.split("=")[1]
          });
          return miraPD;
        }



        function miraListAction(postData, jtParams) {
            var miraQuery = '?';
            // paging
            if (jtParams.jtStartIndex != undefined) {
              var dataPage = jtParams.jtStartIndex/parseFloat(jtParams.jtPageSize)+1;
              miraQuery += 'page=' + dataPage.toString();
            }
            if (jtParams.jtPageSize != undefined) {
              miraQuery += '&per_page=' + jtParams.jtPageSize.toString();
            }
            // sorting
            if (jtParams.jtSorting != undefined) {
              // will look something like: "country ASC,sex ASC,armcd DESC"
              miraQuery += '&order=' + jtParams.jtSorting.replace(/\s/g,":");
            }


            return $.Deferred(function ($dfd) {
                     $.ajax({
                       url: tableUrl + 'data' + miraQuery,  /* refactor */
                       type: 'GET',
                       dataType: 'json',
                       data: postData,
                       success: function (miraData, textStatus, request) {
                         var jtableData = {
                           'Result': 'OK',
                           'Records': miraData["data"],
                           'TotalRecordCount': request.getResponseHeader('records-total')
                         };

                         $dfd.resolve(jtableData);
                        },
                        error: function () {
                          $dfd.reject();
                        }
                      });
                   });
            }



            function miraCreateAction(postData){
              return $.Deferred(function ($dfd) {
                       $.ajax({
                         url: tableUrl + 'data', /* refactor */
                         type: 'POST',
                         dataType: 'json',
                         data: { "data": miraPostData(postData) },
                         success: function (miraData) {
                          //  debugger;
                           jtableData = {
                            "Result":"OK",
                            "Record": miraData
                           }
                           $dfd.resolve(jtableData);
                         },
                         error: function () {
                           $dfd.reject();
                         }
                       });
                   });
            }



            function miraUpdateAction(postData) {
              var postDataObj = miraPostData(postData);
              return $.Deferred(function ($dfd) {
                        $.ajax({
                          url: tableUrl + 'data' + '/' + postDataObj["id"],
                          type: 'PATCH',
                          dataType: 'json',
                            data: { "data": miraPostData(postData) },
                            success: function (miraData) {
                              jtableData = {
                                "Result":"OK",
                                "Record": miraData
                              };
                              $dfd.resolve(jtableData);
                            },
                            error: function () {
                              $dfd.reject();
                            }
                        });
                      });
            }




            function miraDeleteAction(postData) {
              return $.Deferred(function ($dfd) {
                          $.ajax({
                              url: tableUrl + 'data' + '/' + postData["id"],
                              type: 'DELETE',
                              beforeSend: function (request) {
                                request.setRequestHeader('X-CSRF-Token', authToken);
                              },
                              dataType: 'json',
                              success: function (miraData) {
                                jtableData = {
                                  "Result":"OK",
                                };
                                $dfd.resolve(jtableData);
                              },
                              error: function () {
                                  $dfd.reject();
                              }
                          });
                      });
            }





            // Keep track of active tab in the localStorage
            $('#ds-browse-tabs  a').click(function(e) {
              e.preventDefault();
              $(this).tab('show');
            });
            $("ul.nav-tabs#ds-browse-tabs > li > a").on("shown.bs.tab", function(e) {
              var id = $(e.target).attr("href");
              localStorage.setItem('DsSelectedTab', id);
            });
            var selectedTab = localStorage.getItem('DsSelectedTab');
            $('#ds-browse-tabs a[href="#' + selectedTab + '"]').tab('show');




          });



      </script>
    <% end %>
  <!-- </div> -->


<!-- </div> -->
